description = "ANTLR4 project template"
apply plugin: 'java'
apply plugin: 'idea'
//apply from: file('gradle/idea.gradle')

ext.versions = [
        slf4j: "1.7.2",
        logback: "1.0.9",
        junit: "4.10",
        hamcrest: "1.3",
        antlr: "4.0"
]

ext.antlr = [
        grammarpackage: "me.andrz.brace.antlr",
        antlrSource: 'src/main/antlr',
        destinationDir: "src/generated-sources/java"
]

repositories {
    mavenCentral()
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    compile "ch.qos.logback:logback-classic:${versions.logback}"
    compile "org.antlr:antlr4-runtime:${versions.antlr}"
    antlr4 "org.antlr:antlr4:${versions.antlr}"
    testCompile "junit:junit:${versions.junit}"
    testCompile "org.hamcrest:hamcrest-all:${versions.hamcrest}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

idea {
    module {
        sourceDirs += file(antlr.destinationDir)
    }
}

//tasks.withType(Compile) {
//    options.encoding = 'UTF-8'
//}

tasks.withType(Test) {
    systemProperties = System.getProperties()
    testLogging.showStandardStreams = true
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

clean {
    delete antlr.destinationDir
}
